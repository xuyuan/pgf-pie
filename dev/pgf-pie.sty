%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Start of pgf-pie.sty
% 
% Some LaTeX macros for pie chart by using PGF/Tikz package.
% Home page of project: http://pgf-pie.googlecode.com/
% Author: Xu Yuan <xuyuan.cn@gmail.com>
% 

\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{pgf-pie}[2011/10/02 v0.2 Some LaTeX macros for pie
chart by using PGF/Tikz package.]

\RequirePackage{pgfplots}
\usetikzlibrary{pgfplots.colorbrewer} 
\RequirePackage{ifthen}
\RequirePackage{scalefnt}


% args:
% #1: begin angle
% #2: end angle
% #3: number
% #4: label
% #5: explode
% #6: fill color
% #7: radius
% #8: center
% #9: draw
\newcommand{\pgfpie@slice}[9]{
  \pgfmathparse{0.5*(#1)+0.5*(#2)}
  \let\midangle\pgfmathresult

  \path (#8) -- ++(\midangle:#5) coordinate(O);

  \pgfmathparse{#7+#5}
  \let\radius\pgfmathresult
  
  % slice
  \draw[line join=round, fill=#6, \style, draw=#9] (O) -- ++(#1:#7) arc (#1:#2:#7) -- cycle;

  \pgfmathparse{min(((#2)-(#1)-10)/110*(-0.3),0)}
  \let\temp\pgfmathresult
  \pgfmathparse{(max(\temp,-0.5) + 0.8)*#7}
  \let\innerpos\pgfmathresult
	
  \ifthenelse{\equal{\pgfpie@text}{inside}}
  {
    % label and number together
    \path (O) -- ++(\midangle:\innerpos) node[\tcolor]
    {\scalefont{#3}\shortstack{#4\\\pgfpie@numbertext{#3}}};
  }
  {
    % label
    \iflegend
    \else
    \path (O) -- ++ (\midangle:\radius)
    node[inner sep=0, \pgfpie@text=\midangle:\textcolor{\tcolor}{#4}]{};
    \fi

    % number
    \path (O) -- ++(\midangle:\innerpos) node[\tcolor]
    {\scalefont{#3}\pgfpie@numbertext{#3}};
  }
}

\newcommand{\pgfpie@findColor}[1]
{
  \pgfmathparse{int(mod(#1,\value{pgfpie@colorLength}))}
  \let\ci\pgfmathresult
  \foreach \c [count=\j from 0] in \fillcolor {
    \ifnum \j=\ci
    \xdef\thecolor{\c}
    \thecolor
    \breakforeach
    \fi
  }
}

\newcommand{\pgfpie@findExplode}[1]
{
  \pgfmathparse{int(mod(#1,\value{pgfpie@explodeLength}))}
  \let\ei\pgfmathresult
  \foreach \e [count=\j from 0] in \explode {
    \ifnum \j=\ei
    \xdef\theexplode{\e}
    \breakforeach
    \fi
  }
}

% #1: bottom left point
% #2: size
% #3: number
% #4: color
% #5: text
% #6: draw
\newcommand{\pgfpie@square}[6]
{
  \ifthenelse{\equal{\pgfpie@text}{inside}}
  {
    \draw[fill=#4, \style, draw=#6] (#1) rectangle node[\tcolor]
    {\scalefont{#3}\shortstack{#5\\\pgfpie@numbertext{#3}}} ++(#2);
  }
  {
    \draw[fill=#4, \style, draw=#6] (#1) rectangle node[\tcolor]
    {\scalefont{#3}\pgfpie@numbertext{#3}} ++(#2);
  }

}

% #1: pos
% #2: radius
% #3: number
% #4: color
% $5: style
% $6: label
% #7: draw
\newcommand{\pgfpie@cloud}[7]
{
  \draw[fill=#4, #5, draw=#7] (#1) circle[radius=#2];
  \ifthenelse{\equal{\pgfpie@text}{inside}}
  {
    \node[\tcolor] at (#1) {\scalefont{#3}\shortstack{#6\\\pgfpie@numbertext{#3}}};
  }
  {
    \node[\tcolor] at (#1) {\scalefont{#3}\pgfpie@numbertext{#3}};
  }
}

\newlength{\pgfpie@angleEnd}
\newcounter{pgfpie@explodeLength}
\newcounter{pgfpie@colorLength}
\newcounter{pgfpie@sliceLength}

\def\setexplode#1\pgfeov{\def\explode{#1}}
\pgfkeyslet{/explode/.@cmd}{\setexplode}

\def\setcolor#1\pgfeov{\def\fillcolor{#1}}
\pgfkeyslet{/color/.@cmd}{\setcolor}

\def\setradius#1\pgfeov{\def\radius{#1}}
\pgfkeyslet{/radius/.@cmd}{\setradius}

\def\setpos#1\pgfeov{\def\pos{#1}}
\pgfkeyslet{/pos/.@cmd}{\setpos}

\def\setstyle#1\pgfeov{\def\style{#1}}
\pgfkeyslet{/style/.@cmd}{\setstyle}

\def\setbeforenumber#1\pgfeov{\def\beforenumber{#1}}
\pgfkeyslet{/before number/.@cmd}{\setbeforenumber}

\def\setafternumber#1\pgfeov{\def\afternumber{#1}}
\pgfkeyslet{/after number/.@cmd}{\setafternumber}

\def\settext#1\pgfeov{\xdef\pgfpie@text{#1}}
\pgfkeyslet{/text/.@cmd}{\settext}

\def\setsum#1\pgfeov{\xdef\pgfpie@sum{#1}}
\pgfkeyslet{/sum/.@cmd}{\setsum}

\def\setrotate#1\pgfeov{\xdef\rotate{#1}}
\pgfkeyslet{/rotate/.@cmd}{\setrotate}

\newif\ifpolar
\pgfkeys{/polar/.is if=polar}

\newif\iflegend

\newif\ifsquare
\pgfkeys{/square/.is if=square}

\newif\ifcloud
\pgfkeys{/cloud/.is if=cloud}

\newif\ifscalefont
\pgfkeys{/scale font/.is if=scalefont}
\let\scalefontorg\scalefont
\renewcommand{\scalefont}[1]
{
  \ifscalefont
  \pgfmathparse{#1 / \pgfpie@sum * 3 + 0.9}
  \scalefontorg{\pgfmathresult}
  \fi
}

\newif\ifhidenumber
\pgfkeys{/hide number/.is if=hidenumber}
\newcommand{\pgfpie@numbertext}[1]
{
  \ifhidenumber
  \else
  \beforenumber#1\afternumber
  \fi
}

\pgfkeys{
 /border/.estore in = \border,
 /title/.store in = \title,
 /legendstyle/.store in = \legendstyle,
 /colormap/.store in = \colormap,
 /colors/.store in = \colors,
 /tcolor/.store in = \tcolor,
 /legendyshift/.store in = \legendyshift,
 /legendxshift/.store in = \legendxshift,
}

\newcommand{\pie}[2][]
{
  % load default parameters
  \pgfkeys{
    explode=0,
    color={blue!60, cyan!60, yellow!60, orange!60, red!60,
      blue!60!cyan!60, cyan!60!yellow!60, red!60!cyan!60,
      red!60!blue!60, orange!60!cyan!60},
    radius=3,
    pos={0,0},
    style={thick},
    before number=,
    after number=,
    text=label,
    sum=100,
    rotate=0,
    polar=false,
    square=false,
    cloud=false,
    scale font=false,
	hide number=false,
	border=black,
	title=,
	legendstyle=right,
	tcolor=black,
	legendyshift=0,
	legendxshift=0,
	colormap=,
  }
  % load user's parameters
  \pgfkeys{#1}
  
  % COLORBREWER schemes
  \ifthenelse{\equal{\colormap}{BuGn} \OR \equal{\colormap}{BuPu} \OR \equal{\colormap}{GnBu} \OR \equal{\colormap}{OrRd} \OR \equal{\colormap}{PuBu} \OR \equal{\colormap}{PuBuGn} \OR \equal{\colormap}{PuRd} \OR \equal{\colormap}{RdPu} \OR \equal{\colormap}{YlGn} \OR \equal{\colormap}{YlGnBu} \OR \equal{\colormap}{YlOrBr} \OR \equal{\colormap}{YlOrRd} \OR \equal{\colormap}{Blues} \OR \equal{\colormap}{Greens} \OR \equal{\colormap}{Greys} \OR \equal{\colormap}{Oranges} \OR \equal{\colormap}{Purples} \OR \equal{\colormap}{Reds}}{
  \ifthenelse{\equal{\colors}{3}}{\pgfkeys{color={\colormap-C,\colormap-F,\colormap-I}}}{}
  \ifthenelse{\equal{\colors}{4}}{\pgfkeys{color={\colormap-B,\colormap-E,\colormap-G,\colormap-J}}}{}
  \ifthenelse{\equal{\colors}{5}}{\pgfkeys{color={\colormap-B,\colormap-E,\colormap-G,\colormap-I,\colormap-K}}}{}
  \ifthenelse{\equal{\colors}{6}}{\pgfkeys{color={\colormap-B,\colormap-D,\colormap-F,\colormap-G,\colormap-I,\colormap-K}}}{}
  \ifthenelse{\equal{\colors}{7}}{\pgfkeys{color={\colormap-B,\colormap-D,\colormap-F,\colormap-G,\colormap-H,\colormap-J,\colormap-L}}}{}
  \ifthenelse{\equal{\colors}{8}}{\pgfkeys{color={\colormap-A,\colormap-C,\colormap-D,\colormap-F,\colormap-G,\colormap-H,\colormap-J,\colormap-L}}}{}
  \ifthenelse{\equal{\colors}{9}}{\pgfkeys{color={\colormap-A,\colormap-C,\colormap-D,\colormap-F,\colormap-G,\colormap-H,\colormap-J,\colormap-K,\colormap-M}}}{}
  }{}
  
  \ifthenelse{\equal{\colormap}{BrBG} \OR \equal{\colormap}{PiYG} \OR \equal{\colormap}{PRGn} \OR \equal{\colormap}{RdGy} \OR \equal{\colormap}{PuOr} \OR \equal{\colormap}{RdBu} \OR \equal{\colormap}{RdYlBu} \OR \equal{\colormap}{RdYlGn} \OR \equal{\colormap}{Spectral}}{
  \ifthenelse{\equal{\colors}{3}}{\pgfkeys{color={\colormap-E,\colormap-H,\colormap-K}}}{}
  \ifthenelse{\equal{\colors}{4}}{\pgfkeys{color={\colormap-C,\colormap-F,\colormap-J,\colormap-M}}}{}
  \ifthenelse{\equal{\colors}{5}}{\pgfkeys{color={\colormap-C,\colormap-F,\colormap-H,\colormap-J,\colormap-M}}}{}
  \ifthenelse{\equal{\colors}{6}}{\pgfkeys{color={\colormap-B,\colormap-E,\colormap-G,\colormap-H,\colormap-K,\colormap-N}}}{}
  \ifthenelse{\equal{\colors}{7}}{\pgfkeys{color={\colormap-B,\colormap-E,\colormap-G,\colormap-H,\colormap-I,\colormap-K,\colormap-N}}}{}
  \ifthenelse{\equal{\colors}{8}}{\pgfkeys{color={\colormap-B,\colormap-D,\colormap-F,\colormap-G,\colormap-I,\colormap-J,\colormap-L,\colormap-N}}}{}
  \ifthenelse{\equal{\colors}{9}}{\pgfkeys{color={\colormap-B,\colormap-D,\colormap-F,\colormap-G,\colormap-H,\colormap-I,\colormap-J,\colormap-L,\colormap-N}}}{}
  \ifthenelse{\equal{\colors}{10}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-D,\colormap-F,\colormap-G,\colormap-I,\colormap-J,\colormap-L,\colormap-N,\colormap-O}}}{}
  \ifthenelse{\equal{\colors}{11}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-D,\colormap-F,\colormap-G,\colormap-H,\colormap-I,\colormap-J,\colormap-L,\colormap-N,\colormap-O}}}{}
  }{}
  
  \ifthenelse{\equal{\colormap}{Accent} \OR \equal{\colormap}{Pastel2} \OR \equal{\colormap}{Dark2} \OR \equal{\colormap}{Set2}}{
  \ifthenelse{\equal{\colors}{3}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C}}}{}
  \ifthenelse{\equal{\colors}{4}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D}}}{}
  \ifthenelse{\equal{\colors}{5}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E}}}{}
  \ifthenelse{\equal{\colors}{6}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F}}}{}
  \ifthenelse{\equal{\colors}{7}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G}}}{}
  \ifthenelse{\equal{\colors}{8}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H}}}{}
  }{}
  
  \ifthenelse{\equal{\colormap}{Pastel1} \OR \equal{\colormap}{Set1}}{
  \ifthenelse{\equal{\colors}{3}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C}}}{}
  \ifthenelse{\equal{\colors}{4}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D}}}{}
  \ifthenelse{\equal{\colors}{5}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E}}}{}
  \ifthenelse{\equal{\colors}{6}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F}}}{}
  \ifthenelse{\equal{\colors}{7}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G}}}{}
  \ifthenelse{\equal{\colors}{8}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H}}}{}
  \ifthenelse{\equal{\colors}{9}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H,\colormap-I}}}{}
  }{}
  
  \ifthenelse{\equal{\colormap}{Paired} \OR \equal{\colormap}{Set3}}{
  \ifthenelse{\equal{\colors}{3}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C}}}{}
  \ifthenelse{\equal{\colors}{4}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D}}}{}
  \ifthenelse{\equal{\colors}{5}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E}}}{}
  \ifthenelse{\equal{\colors}{6}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F}}}{}
  \ifthenelse{\equal{\colors}{7}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G}}}{}
  \ifthenelse{\equal{\colors}{8}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H}}}{}
  \ifthenelse{\equal{\colors}{9}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H,\colormap-I}}}{}
  \ifthenelse{\equal{\colors}{10}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H,\colormap-I,\colormap-J}}}{}
  \ifthenelse{\equal{\colors}{11}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H,\colormap-I,\colormap-J,\colormap-K}}}{}
  \ifthenelse{\equal{\colors}{12}}{\pgfkeys{color={\colormap-A,\colormap-B,\colormap-C,\colormap-D,\colormap-E,\colormap-F,\colormap-G,\colormap-H,\colormap-I,\colormap-J,\colormap-K,\colormap-K}}}{}
  }{}
   
  % add percentage automatically
  \ifthenelse{\equal{\pgfpie@sum}{100}}
  {
    \pgfkeys{after number=\%}
    \pgfkeys{#1}
  }{}

  % legend or not
  \ifthenelse{\equal{\pgfpie@text}{legend}}
  {\legendtrue}
  {\legendfalse}

  % handle sum
  \ifthenelse{\equal{\pgfpie@sum}{auto}}
  {
    % sum all input
    \xdef\pgfpie@sum{0}
    \foreach \p/\t in {#2}
    {
      \pgfmathparse{\pgfpie@sum + \p}
      \xdef\pgfpie@sum{\pgfmathresult}
    }
  }
  {}

  % init counters
  \setcounter{pgfpie@explodeLength}{0}
  \foreach \e in \explode { \addtocounter{pgfpie@explodeLength}{1} }

  \setcounter{pgfpie@colorLength}{0}
  \foreach \c in \fillcolor { \addtocounter{pgfpie@colorLength}{1} }
  
  \pgfmathsetlength{\pgfpie@angleEnd}{0}

  \setcounter{pgfpie@sliceLength}{0}
  \foreach \p/\e in {#2} { \addtocounter{pgfpie@sliceLength}{1} }

  \ifsquare
  %%%%%%%%%% SQUARE PIE BEGIN %%%%%%%%%%%
  \pgfmathparse{\radius*2}
  \xdef\verticalLength{\pgfmathresult}
  \xdef\horizontalLength{\pgfmathresult}
  \path (\pos) -- ++(-\radius, -\radius) coordinate (start);
  \pgfmathparse{\verticalLength * \horizontalLength / \pgfpie@sum}
  \let\squareUnit\pgfmathresult

  % drawing loop
  \foreach \p/\t [count=\i from 0] in {#2}
  {
    \pgfpie@findColor{\i}

    \ifthenelse{\lengthtest{\verticalLength cm > \horizontalLength cm}}
    {
      \pgfmathparse{\p * \squareUnit / \horizontalLength}
      \let\height\pgfmathresult
      
      \pgfpie@square{start}{\horizontalLength,\height}
      {\p}
      {\thecolor}
      {\t}
	  {\border}
      %label
      \iflegend
      \else
      \ifthenelse{\equal{\pgfpie@text}{inside}}
      {}
      {
        \path (start) -- ++(\horizontalLength,\height*0.5) node[inner
        sep=0, \pgfpie@text=0:\textcolor{\tcolor}{\t}]{};
      }
      \fi

      \pgfmathparse{\verticalLength - \height}
      \xdef\verticalLength{\pgfmathresult}
      \path (start) -- ++(0, \height) coordinate (start);
    }
    {
      \pgfmathparse{\p * \squareUnit / \verticalLength }
      \let\width\pgfmathresult

      \pgfpie@square{start}{\width,\verticalLength}
      {\p}
      {\thecolor}
      {\t}
	  {\border}
      %label
      \iflegend
      \else
      \ifthenelse{\equal{\pgfpie@text}{inside}}
      {}
      {
        \path (start) -- ++(\width*0.5,\verticalLength) node[inner
        sep=0, \pgfpie@text=90:\textcolor{\tcolor}{\t}]{};
      }
      \fi

      \pgfmathparse{\horizontalLength - \width}
      \xdef\horizontalLength{\pgfmathresult}
      \path (start) -- ++(\width, 0) coordinate (start);
    }
  }
  
  %%%%%%%%%% SQUARE PIE END %%%%%%%%%%%
  \else
  \ifcloud
  %%%%%%%%%% CLOUD PIE BGEIN %%%%%%%%%%%
  % drawing loop
  \foreach \p/\t [count=\i from 0] in {#2}
  {
    % find explode
    \pgfpie@findExplode{\i}
    \def\cloudGap{\theexplode + 0.1}
    \pgfmathparse{sqrt(\p / \pgfpie@sum) * \radius}
    \let\cloudR\pgfmathresult
    \ifnum \i = 0
    % first cloud
    \coordinate (O) at (\pos);
    \xdef\cloudRone{\cloudR}
    \xdef\cloudExtendDir{180+\rotate}
    \else
    \ifnum \i = 1
    % second cloud
    \xdef\cloudRtwo{\cloudR}
    \xdef\cloudExtendDir{45+\rotate}
    \path (O) -- ++(\cloudExtendDir:\cloudRone+\cloudGap+\cloudRtwo) coordinate (O);
    \else
    % next cloud
    \pgfmathparse{\cloudRone+\cloudGap+\cloudRtwo}
    \let\la\pgfmathresult
    \pgfmathparse{\cloudRone+\cloudGap+\cloudR}
    \let\lb\pgfmathresult
    \pgfmathparse{\cloudRtwo+\cloudGap+\cloudR}
    \let\lc\pgfmathresult
    \pgfmathparse{\la^2+\lc^2-\lb^2}
    \let\tmp\pgfmathresult
    \pgfmathparse{180 - acos(\tmp / 2 / \la / \lc)}
    \let\cloudRot\pgfmathresult
    \ifodd \i
    \pgfmathparse{-\cloudRot}
    \let\cloudRot\pgfmathresult
    \fi
    \pgfmathparse{\cloudExtendDir - \cloudRot}
    \xdef\cloudExtendDir{\pgfmathresult}
    \path (O) -- ++(\cloudExtendDir:\lc) coordinate (O);
    \xdef\cloudRone{\cloudRtwo}
    \xdef\cloudRtwo{\cloudR}
    \fi
    \fi

    % find color
    \pgfpie@findColor{\i}

    \pgfpie@cloud{O}{\cloudR}{\p}
    {\thecolor}{\style}{\t}{\border}

    % label
    \iflegend
    \else
    \ifthenelse{\equal{\pgfpie@text}{inside}}
    {}
    {
      \path (O) -- ++(\cloudExtendDir:\cloudR)
      node[inner sep=0, \pgfpie@text=\cloudExtendDir:\textcolor{\tcolor}{\t}] {};
    }
    \fi
  }
  %%%%%%%%%% CLOUD PIE BGEIN %%%%%%%%%%%
  \else
  %%%%%%%%%% CIRCLE PIE BGEIN %%%%%%%%%%%
  \ifpolar
  \xdef\maxValue{0}
  \foreach \p/\e in {#2} {
    \ifnum \maxValue < \p
    \xdef\maxValue{\p}
    \fi
  }
  \pgfmathparse{\pgfpie@sum / \value{pgfpie@sliceLength}}
  \xdef\polarangle{\pgfmathresult}
  \pgfmathparse{\radius / sqrt(\maxValue)}
  \xdef\polarRadiusUnit{\pgfmathresult}
  \else
  \xdef\theradius{\radius}
  \fi

  \xdef\pgfpie@angleBegin{\the\pgfpie@angleEnd}
  % drawing loop
  \foreach \p/\t [count=\i from 0] in {#2}
  {
    \pgfmathsetlength{\pgfpie@angleEnd}{\pgfpie@angleBegin}
    \ifpolar
    % Polar area diagram
    \pgfmathaddtolength{\pgfpie@angleEnd}{\polarangle}
    \pgfmathparse{sqrt(\p) * \polarRadiusUnit}
    \xdef\theradius{\pgfmathresult}
    \else
    % normal pie
    \pgfmathaddtolength{\pgfpie@angleEnd}{\p}
    \fi

    % find explode
    \pgfpie@findExplode{\i}

    % find color
    \pgfpie@findColor{\i}
    \pgfpie@slice{\pgfpie@angleBegin/\pgfpie@sum*360+\rotate}
    {\the\pgfpie@angleEnd/\pgfpie@sum*360+\rotate}
    {\p}
    {\t}
    {\theexplode}
    {\thecolor}
    {\theradius}
    {\pos}
	{\border}
    \xdef\pgfpie@angleBegin{\the\pgfpie@angleEnd}
  }
  %%%%%%%%%% CIRCLE PIE END %%%%%%%%%%%
  \fi
  \fi

  % legend
  \iflegend
  
  \ifthenelse{\equal{\legendstyle}{left}}  
  {
  \coordinate[xshift=-0.8cm+\legendxshift,
  yshift=(\value{pgfpie@sliceLength}*0.5+1)*0.5cm+\legendyshift] (legendpos) at
  (current bounding box.west);

  \begin{scope}[node distance=0.5cm]
    \foreach \p/\t  [count=\i from 0] in {#2}
    {
      \pgfpie@findColor{\i}
      \node[fill=\thecolor, \style, below of=legendpos, label={[left=.75em]0:\textcolor{\tcolor}{\t}}, draw=\border] (legendpos) {};
    }
  \end{scope}  
  }
  {
  \ifthenelse{\equal{\legendstyle}{horizontal}} 
  {
  \coordinate[yshift=-3ex+\legendyshift, xshift=\legendxshift] (legendpos) at
  (current bounding box.south west);

  \begin{scope}[node distance=0.5cm]
    \foreach \p/\t  [count=\i from 0] in {#2}
    {
      \pgfpie@findColor{\i}
      \node[fill=\thecolor, \style, right of=legendpos, label={[name=lnode]0:\textcolor{\tcolor}{\t}}, draw=\border] (legendpos) {};
	  \coordinate (legendpos) at (lnode.east);
    }
  \end{scope}
  }
  {
  \coordinate[xshift=0.8cm+\legendxshift,
  yshift=(\value{pgfpie@sliceLength}*0.5+1)*0.5cm+\legendyshift] (legendpos) at
  (current bounding box.east);

  \begin{scope}[node distance=0.5cm]
    \foreach \p/\t  [count=\i from 0] in {#2}
    {
      \pgfpie@findColor{\i}
      \node[fill=\thecolor, \style, below of=legendpos, label=0:\textcolor{\tcolor}{\t}, draw=\border] (legendpos) {};
    }
  \end{scope}
  } 
  }
  
  \fi
  
  %title
  \ifthenelse{\equal{\title}{}}{}{\node[above=3ex] at (current bounding box.north) {\title};};
}

%%% End of pgf-pie.sty
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

